name: CI

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        node-version: ['14', '16', '18']
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
#    env:
      # electron-packager (win32 ia32 on macos) https://github.com/electron/electron-packager/pull/449#issuecomment-240508298
#      WINEDLLOVERRIDES: 'mscoree,mshtml='

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # linux dependencies
      - run: sudo apt update && sudo apt install -y wine64
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
      - run: wine --version
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
      - run: sudo add-apt-repository ppa:git-core/ppa -y && sudo apt-get update -q && sudo apt-get install -y git
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '*'
      # macos dependencies
# required for electron-packager
#      - run: brew update && brew cask install xquartz wine-stable
#        if: matrix.os == 'macos-latest' && matrix.node-version == '14'
#      - run: wine64 --version
#        if: matrix.os == 'macos-latest' && matrix.node-version == '14'
      - run: brew reinstall git
        if: matrix.os == 'macos-latest' && matrix.node-version == '*'
      # windows dependencies
      # https://github.community/t5/GitHub-Actions/TEMP-is-broken-on-Windows/td-p/30432
      - run: echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
        if: matrix.os == 'windows-latest'
      - run: choco upgrade git
        if: matrix.os == 'windows-latest' && matrix.node-version == '*'

      - run: git --version
      - run: git config --global user.email "test@testy.com"
      - run: git config --global user.name "Test testy"
      - run: git config --global protocol.file.allow always # tests use file based submodules see #1539

      - run: npm ci
      - run: npm run lint
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
      - run: npm run build
      - run: npm test

      # publish artifacts
      - run: npm pack
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
      - run: npm run electronpackage -- --all
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
      - run: npm run electronzip
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'

      - name: Upload npm pack
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit
          path: fungit-*.tgz
          retention-days: 7

      - name: Upload fungit-darwin-arm64
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-darwin-arm64
          path: dist/fungit-darwin-arm64.zip
          retention-days: 7

      - name: Upload fungit-darwin-x64
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-darwin-x64
          path: dist/fungit-darwin-x64.zip
          retention-days: 7

      - name: Upload fungit-linux-arm64
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-linux-arm64
          path: dist/fungit-linux-arm64.zip
          retention-days: 7

      - name: Upload fungit-linux-armv7l
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-linux-armv7l
          path: dist/fungit-linux-armv7l.zip
          retention-days: 7

      - name: Upload fungit-linux-x64
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-linux-x64
          path: dist/fungit-linux-x64.zip
          retention-days: 7

      - name: Upload fungit-win32-arm64
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-win32-arm64
          path: dist/fungit-win32-arm64.zip
          retention-days: 7

      - name: Upload fungit-win32-ia32
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-win32-ia32
          path: dist/fungit-win32-ia32.zip
          retention-days: 7

      - name: Upload fungit-win32-x64
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14'
        uses: actions/upload-artifact@v3
        with:
          name: fungit-win32-x64
          path: dist/fungit-win32-x64.zip
          retention-days: 7

      - name: npm publish
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14' && github.repository == 'ungtb10d/fungit' && github.ref == 'refs/heads/master'
        uses: actions/github-script@v6
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          script: |
            const script = require('./scripts/npmpublish.js')
            await script({github, context, core, exec})
